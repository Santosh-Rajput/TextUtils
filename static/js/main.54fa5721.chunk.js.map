{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","blue","wine","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","showAlert","newText","toUpperCase","toLowerCase","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.54fa5721.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode==='light'?'#6800d7':'dark'} bg-${props.mode==='light'?'light':'black'}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className={`navbar-brand navbar-${props.mode}`} href=\"#sa\">{props.title}</a>\r\n                {/* <Link className={`navbar-brand navbar-${props.mode}`} to=\"/\">{props.title}</Link> */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#ho\">Home</a>\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#about\">{props.aboutText}</a>\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                        \r\n\r\n                    </div>\r\n                    <div>\r\n                        <button className='theme my-1 mx-1' onClick={props.blue}></button>\r\n                        <button className='darkRed my-1 mx-1' onClick={props.wine}></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About' \r\n  };\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper case...\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower case...\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared...\",\"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied...\",\"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces emoved...\",\"success\");\r\n\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='black'?'white':'#042743'}}> \r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='black'?'#8e6bb6':'white', color: props.mode==='black'?'white':'#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-outline-primary mx-1 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-outline-primary mx-1 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-outline-primary mx-1 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-outline-primary mx-1 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-outline-primary mx-1 my2\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='black'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=(word).toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize (props.alert.type)}</strong>:{props.alert.msg}\r\n     </div>\r\n    \r\n  )\r\n}\r\n","\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import About from './components/About';\r\n\r\n\r\n// \r\n\r\n\r\n \r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); \r\n  \r\n  const [alert, setAlert] = useState(null); \r\n\r\n  const blue = ()=>{\r\n    if (mode===\"light\"||mode===\"black\") {\r\n      if(mode === 'light'){\r\n        setMode('black');\r\n        document.body.style.backgroundColor = '#3700ff';\r\n        showAlert(\"Blue-Black mode\",\"success\")\r\n        document.title='TextUtlis-Dark Mode';\r\n      }\r\n      else{\r\n        setMode('light');\r\n        document.body.style.backgroundColor = 'white';\r\n        showAlert(\"Normal\",\"success\")\r\n        document.title='TextUtlis-Home ';\r\n        \r\n      }\r\n    }\r\n }\r\n  const wine = ()=>{\r\n    if (mode===\"light\"||mode===\"black\") {\r\n      if(mode === 'light'){\r\n        setMode('black');\r\n        document.body.style.backgroundColor = '#7a0000';\r\n        showAlert(\"Dark Red-Black mode \",\"success\")\r\n        document.title='TextUtlis-Dark Mode';\r\n      }\r\n      else{\r\n        setMode('light');\r\n        document.body.style.backgroundColor = 'white';\r\n        showAlert(\"Noramal\",\"success\")\r\n        document.title='TextUtlis-Home ';\r\n        \r\n      }\r\n    }\r\n }\r\n\r\n \r\n\r\n  const showAlert=(message,type)=>{\r\n        setAlert({\r\n          msg:message,\r\n          type:type\r\n        })\r\n        setTimeout((showAlert) => {\r\n          setAlert(null);\r\n        }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode === 'light'){\r\n      setMode('black');\r\n      document.body.style.backgroundColor = '#0f031c';\r\n      showAlert(\"Dark mode has been enable\",\"success\")\r\n      document.title='TextUtlis-Dark Mode';\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enable\",\"success\")\r\n      document.title='TextUtlis-Home ';\r\n      \r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\r\n    {/* <Navbar/> */}\r\n    {/* <Router> */}\r\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} blue= {blue} wine={wine} />\r\n    <Alert alert={alert}/> \r\n    <div className=\"container my-3\">\r\n\r\n    {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n        \r\n          </Route>\r\n        </Switch> */}\r\n        {/* </Router> */}\r\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\r\n    </div>\r\n    </> \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}